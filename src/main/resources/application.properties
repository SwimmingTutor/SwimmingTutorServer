spring.application.name=swimtutor
server.port=${SERVER_PORT}

## DataSource Setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:${DB_PORT}/${DB_NAME}?serverTimezone=Asia/Seoul
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

## JPA Setting
# 테이블 옵션
#  update : 기존 스키마 유지, JPA에 의해 변경된 부분만 추가
#  validate : 엔티티, 테이블 정상 매핑 여부만 검증 ==> 운영 서버에서 사용
#  create : 기존 스키마 삭제, 새로 생성
#  create-drop : 스키마 생성, 애플리케이션 종료 시 삭제
#  none : 초기화 동작 안 함
spring.jpa.hibernate.ddl-auto=none
# DDL 생성 시 데이터베이스 고유 기능 사용 여부
spring.jpa.generate-ddl=false
# JPA 생성 Query 보여주기
spring.jpa.show-sql=true
# JPA 생성 Query 보기좋게 보여주기
spring.jpa.properties.hibernate.format_sql=true
# JPA가 사용할 dialect 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

## Spring Security Setting
#registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:${SERVER_PORT}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=email,profile

# spring.security.user.name=${SEC_USER}
# spring.security.user.password=${SEC_PASSWORD}

#spring.profiles.include=oauth
